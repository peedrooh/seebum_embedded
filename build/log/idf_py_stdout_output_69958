[1/11] Performing build step for 'bootloader'
[1/1] cd /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/bootloader/esp-idf/esptool_py && /home/pedro/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/pedro/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/bootloader/bootloader.bin
Bootloader binary size 0x5230 bytes. 0x2dd0 bytes (36%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/seebum_embedded.c.obj
[5/11] Building C object esp-idf/motor_driver/CMakeFiles/__idf_motor_driver.dir/motor_driver.c.obj
[6/11] Linking C static library esp-idf/motor_driver/libmotor_driver.a
[7/11] Linking C static library esp-idf/main/libmain.a
[8/11] Generating ld/sections.ld
[9/11] Linking CXX executable seebum_embedded.elf
[10/11] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/seebum_embedded.bin
[11/11] cd /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/esp-idf/esptool_py && /home/pedro/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/pedro/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/partition_table/partition-table.bin /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/seebum_embedded.bin
seebum_embedded.bin binary size 0x44dc0 bytes. Smallest app partition is 0x100000 bytes. 0xbb240 bytes (73%) free.
