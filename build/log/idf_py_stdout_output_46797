[1/12] Performing build step for 'bootloader'
[1/1] cd /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/bootloader/esp-idf/esptool_py && /home/pedro/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/pedro/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/bootloader/bootloader.bin
Bootloader binary size 0x5230 bytes. 0x2dd0 bytes (36%) free.
[2/12] No install step for 'bootloader'
[3/12] Completed 'bootloader'
[4/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/seebum_embedded.c.obj
[5/12] Building C object esp-idf/motor_driver/CMakeFiles/__idf_motor_driver.dir/motor_driver.c.obj
[6/12] Linking C static library esp-idf/motor_driver/libmotor_driver.a
[7/12] Linking C static library esp-idf/main/libmain.a
[8/12] Generating ld/sections.ld
[9/12] Linking CXX executable seebum_embedded.elf
[10/12] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/seebum_embedded.bin
[11/12] cd /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/esp-idf/esptool_py && /home/pedro/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/pedro/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/partition_table/partition-table.bin /home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build/seebum_embedded.bin
seebum_embedded.bin binary size 0x37db0 bytes. Smallest app partition is 0x100000 bytes. 0xc8250 bytes (78%) free.
[11/12] cd /home/pedro/esp/esp-idf/components/esptool_py && /home/pedro/.asdf/installs/python/3.10.12/lib/python3.10/site-packages/cmake/data/bin/cmake -D IDF_PATH=/home/pedro/esp/esp-idf -D "SERIAL_TOOL=/home/pedro/.espressif/python_env/idf5.3_py3.10_env/bin/python;;/home/pedro/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/pedro/Pessoal/code/UTFPR/TCC/seebum_embedded/build -P /home/pedro/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 seebum_embedded.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyACM0
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 3c:84:27:cc:42:24
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00047fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21040 bytes to 13056...
Writing at 0x00000000... (100 %)
Wrote 21040 bytes (13056 compressed) at 0x00000000 in 0.3 seconds (effective 593.1 kbit/s)...
Hash of data verified.
Compressed 228784 bytes to 115928...
Writing at 0x00010000... (12 %)
Writing at 0x0001da25... (25 %)
Writing at 0x0002544e... (37 %)
Writing at 0x0002b9fb... (50 %)
Writing at 0x00032c16... (62 %)
Writing at 0x0003ab70... (75 %)
Writing at 0x000409c4... (87 %)
Writing at 0x000476bc... (100 %)
Wrote 228784 bytes (115928 compressed) at 0x00010000 in 1.7 seconds (effective 1078.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 721.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
